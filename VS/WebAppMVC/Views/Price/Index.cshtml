@model IEnumerable<DbConnectionClassLib.ResponseClasses.ListViewListItem>

@{
    ViewData["Title"] = "Price Chart";
}

<div class="row" style="width:100%;">
    <div style="width:100%;">
        <!--class="frame"-->

        <ul class="nav nav-tabs" id="navtabs">
            <li class="active"><a id="tab_price" data-toggle="tab" href="#price">Instrument</a></li>
            <li><a id="tab_ta" data-toggle="tab" href="#ta">Technical Analysis</a></li>
            <li><a id="tab_dr" data-toggle="tab" href="#dr">Date Range</a></li>
            <li><a id="tab_chart" data-toggle="tab" href="#chart">Chart</a></li>
            <li><a id="tab_stat" data-toggle="tab" href="#stat">Overview</a></li>
        </ul>

        <div class="tab-content">
            <div id="price" class="tab-pane fade in active">
                <h3 id="label_price">Instrument</h3>
                <div class="row">
                    <div class="col-sm-12 col-xs-12">
                        <div class="form-group">
                            <div id="listview"></div>
                        </div>
                    </div>
                    <div id="buttonsdiv" style="text-align:center;margin-top:15px;">
                        <div class="row">
                            <button type="button" class="btn btn-default btn-xs" id="1dBtn" onclick="enableIntradayButtons()">1d</button>
                            <button type="button" class="btn btn-default btn-xs" id="5dBtn" onclick="setDateRange('5d','price')">5d</button>
                            <button type="button" class="btn btn-default btn-xs" id="1mBtn" onclick="setDateRange('1m','price')">1m</button>
                            <button type="button" class="btn btn-default btn-xs" id="3mBtn" onclick="setDateRange('3m','price')">3m</button>
                            <button type="button" class="btn btn-default btn-xs" id="6mBtn" onclick="setDateRange('6m','price')">6m</button>
                            <button type="button" class="btn btn-default btn-xs" id="1yBtn" onclick="setDateRange('1y','price')">1y</button>
                            <button type="button" class="btn btn-default btn-xs" id="5yBtn" onclick="setDateRange('5y','price')">5y</button>
                            <button type="button" class="btn btn-default btn-xs" id="10yBtn" onclick="setDateRange('10y','price')">10y</button>
                            <button type="button" class="btn btn-default btn-xs" id="maxBtn" onclick="setDateRange('max','price')">max</button>
                        </div>
                    </div>
                    <div id="intradaybuttonsdiv" style="text-align:center;margin-top:15px;display:none;">
                        <div class="row">
                            <button type="button" class="btn btn-default btn-xs" id="1minBtn" onclick="intradayClicked('1min','price')">1 Min</button>
                            <button type="button" class="btn btn-default btn-xs" id="5minBtn" onclick="intradayClicked('5min','price')">5 Min</button>
                            <button type="button" class="btn btn-default btn-xs" id="15minBtn" onclick="intradayClicked('15min','price')">15 Min</button>
                            <button type="button" class="btn btn-default btn-xs" id="30minBtn" onclick="intradayClicked('30min','price')">30 Min</button>
                            <button type="button" class="btn btn-default btn-xs" id="60minBtn" onclick="intradayClicked('60min','price')">60 Min</button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="dr" class="tab-pane fade">
                <h3 id="label_dr">Date Range</h3>
                <div class="row">
                    <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="from">From:</label>
                                <input type="text" class="form-control" id="datepickerFrom" name="datepickerFrom">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="to">To:</label>
                                <input type="text" class="form-control" id="datepickerTo" name="datepickerTo">
                            </div>
                        </div>
                    </div>
                </div>
                <div style="text-align:center;margin-top:15px;">
                    <div class="row">
                        <button id="loadBtn" type="button" class="btn btn-primary" onclick="GetpriceData()">Load Chart</button>
                    </div>
                </div>
            </div>

            <div id="ta" class="tab-pane fade">
                <h3 id="label_ta">Technical Analysis</h3>
                <div class="row">
                    <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="rsi">RSI:</label>
                                <br>
                                <input type="number" class="form-control" id="rsi" value="14">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="macdfast">MACD Fast:</label>
                                <br>
                                <input type="number" class="form-control" id="macdfast" value="12">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="macdslow">MACD Slow:</label>
                                <br>
                                <input type="number" class="form-control" id="macdslow" value="26">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="macdsignal">MACD Signal:</label>
                                <br>
                                <input type="number" class="form-control" id="macdsignal" value="9">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="bbandperiod">Bollinger Bands:</label>
                                <br>
                                <input type="number" class="form-control" id="bbandperiod" value="10">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="bbandup">Bolling Bands Up:</label>
                                <br>
                                <input type="number" class="form-control" id="bbandup" value="2">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="bbanddown">Bolling Bands Down:</label>
                                <br>
                                <input type="number" class="form-control" id="bbanddown" value="2">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                        <div class="form-inline" style="margin-top:15px;">
                            <div class="form-group">
                                <label for="heikinashibtn">Heikin Ashi:</label>
                                <br>
                                <button type="button" class="btn btn-default" id="heikinashibtn" onclick="HeikinAshiBtnClick(this)">Off</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div id="chart" class="tab-pane fade">
                <h3 id="label_chart">Chart</h3>
                <div class="row">
                    <div id="chartframe">
                        <!--style="width:100%;"-->
                        <div id="container"></div>
                    </div>
                </div>
            </div>

            <div id="stat" class="tab-pane fade">
                <h3 id="label_stat">Overview</h3>
                <div class="row">
                    <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
                        <p id="p_overview"></p>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

<div id="annotationsdiv" style="display:none"></div>
<a id="hrefbuttonsdiv" href="#buttonsdiv" style="visibility:hidden;"></a>
<a id="hrefchardiv" href="#navtabs" style="visibility:hidden;"></a>

<script>
    document.getElementById("tab_chart").style.display = "none";
    document.getElementById("tab_stat").style.display = "none";
    var cntr = 0;
    var container = document.getElementById('container');
    var annotationsdiv = document.getElementById('annotationsdiv');
    var now = new Date();
    var yearAgo = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());
    var nowStr = now.getFullYear() + '.' + (now.getMonth() + 1).toString().padStart(2, '0') + '.' + now.getDate().toString().padStart(2, '0');
    var yearAgoStr = yearAgo.getFullYear() + '.' + (yearAgo.getMonth() + 1).toString().padStart(2, '0') + '.' + yearAgo.getDate().toString().padStart(2, '0');
    var valueStr = yearAgoStr + ' - ' + nowStr;
    var selectedInstrument = null;

    var datepickerFrom = new ej2.calendars.DatePicker({
        format: 'yyyy-MM-dd',
        width: '100%',
        value: yearAgo,
    });
    datepickerFrom.appendTo('#datepickerFrom');

    var datepickerTo = new ej2.calendars.DatePicker({
        format: 'yyyy-MM-dd',
        width: '100%',
        value: now,
    });
    datepickerTo.appendTo('#datepickerTo');

    var ds = @Html.Raw(Json.Serialize(Model));
    var listViewHeight = (landscape?(height-170):(height-220));
    var nestedListObj = new ej2.lists.ListView({
        //Map appropriate columns to fields property
        fields: { /*iconCss: 'icon',*/ tooltip: 'text' },
        //Set defined data to dataSource property
        dataSource:  ds,
        //Set true to show icons
        showIcon: false,
        //Set header title
        headerTitle: 'Categories',
        height: listViewHeight,
        //Set true to show header title
        showHeader: true
    });
    //Render initialized ListView component
    nestedListObj.appendTo('#listview');

    function GetpriceData() {
        var selected = nestedListObj.getSelectedItems();
        if (!(selected && selected.data && selected.data.id && selected.data.id.length > 0 && selected.data.id.indexOf('/') > 0)) {
            toastr.error('Select an instrument!');
            return false;
        }
        ResetButtonsStyle();
        document.getElementById("tab_chart").click();
        EnableButtons(false);
        RemoveElements('annotationsdiv');
        RemoveElements('container');
        var df = new Date(datepickerFrom.value);
        var dt = new Date(datepickerTo.value);
        var data = {
            instrumentFullPath: selected.data.id,//treeObj.properties.selectedNodes[0],
            instrumentName: selected.text,//treeObj.startNode.textContent,
            startDateStr: df.getFullYear() + '-' + pad(df.getMonth() + 1,2) + '-' + pad(df.getDate(),2),
            endDateStr: dt.getFullYear() + '-' + pad(dt.getMonth() + 1, 2) + '-' + pad(dt.getDate(), 2),
            interval: intradayInterval,
            rsi: document.getElementById('rsi').value,
            macdfast: document.getElementById('macdfast').value,
            macdslow: document.getElementById('macdslow').value,
            macdsignal: document.getElementById('macdsignal').value,
            bbandperiod: document.getElementById('bbandperiod').value,
            bbandup: document.getElementById('bbandup').value,
            bbanddown: document.getElementById('bbanddown').value,
            heikinashi: document.getElementById("heikinashibtn").firstChild.data === "On"
        };
        //console.log('data',data);
        AjaxCall('POST', '/api/GetPriceData/', data, function (response, error) {
            console.log('GetpriceData response', response);
            if (response === false) {
                ResetButtonsStyle();
                EnableButtons(true);
                document.getElementById("tab_chart").style.display = "none";
                document.getElementById("tab_stat").style.display = "none";
                return false;
            }
            var originalTitle = document.title;
            document.title = "DRAWING CHART...";

            var p_overview = document.getElementById("p_overview");
            p_overview.innerText = response.overview;

            switch (response.type) {
                case 'daily':
                    initSeriesArray();
                    var macdrsi = (response.macdData.macd.points.length > 0);
                    if (macdrsi) {
                        seriesArray.push(seriesRSI);
                        seriesArray.push(seriesMACDSignal);
                        seriesArray.push(seriesMACD);
                        seriesArray.push(seriesMACDHist);
                        seriesArray.push(seriesBBandsLower);
                        seriesArray.push(seriesBBandsMiddle);
                        seriesArray.push(seriesBBandsUpper);
                        seriesArray.push(seriesMA1);
                        seriesArray.push(seriesMA2);
                        initAxes('pricemacdrsi');
                    }
                    else {
                        initAxes('price');
                    }
                    var useCandle = (response.priceData.ohlcpoints.length > 0 && response.priceData.points.length == response.priceData.ohlcpoints.length);
                    if (useCandle) {
                        seriesArray[0].type = 'candle';
                        seriesArray[0].tooltip.format = '#point.x# <br/> Open #point.open# <br/> Low #point.low# <br/> High #point.high# <br/> Close #point.close# <br/> Change #point.change# % <br/> Change Before Open #point.changebeforeopen# %';
                        delete seriesArray[0].fill;
                    }
                    else {
                        seriesArray[0].type = 'line';
                        seriesArray[0].fill = '#000066';
                        seriesArray[0].tooltip.format = '#series.name# #point.x# <br/> #point.y# <br/> Change #point.change# %';
                    }
                    for (var s = 0; s < seriesArray.length; s++) {
                        seriesArray[s].points = [];
                    }
                    for (var i = 0; i < response.dateTimeData.points.length; i++) {
                        var d = '';
						if (days == 0) {
							d = response.dateTimeData.points[i].substring(0, 10);
						}
						else {
                            //d = response.dateTimeData.points[i].substring(11, 19); // ez nagyon elkurja a grafikont!
                            d = response.dateTimeData.points[i].replace("T", "  ");
						}
                        if (useCandle) {
                            seriesArray[0].points.push({
                                x: d,
                                open: response.priceData.ohlcpoints[i].open,
                                high: response.priceData.ohlcpoints[i].high,
                                low: response.priceData.ohlcpoints[i].low,
                                close: response.priceData.ohlcpoints[i].close,
                                change: response.priceData.change[i],
                                changebeforeopen: response.priceData.changebeforeopen[i]
                            }); // Price Candle Series
                        }
                        else {
                            seriesArray[0].points.push({ x: d, y: response.priceData.points[i], change:response.priceData.change[i] }); // Price Series
                        }

                        seriesArray[1].points.push({ x: d, y: response.capitalizationData.points[i] }); // Capitalization (BET Reszvenynel nem kellene)

                        var color = (response.volumeData.points[i] > 0) ? 'green' : 'red';
                        seriesArray[2].points.push({ // Volume
                            x: d,
                            y: Math.abs(response.volumeData.points[i]),
                            fill: color,
                            border: { color: color }
                        });

                        if (macdrsi) {
                            seriesArray[3].points.push({ x: d, y: response.rsiData.points[i] }); // Rsi Series
                            seriesArray[4].points.push({ x: d, y: response.macdData.macdSignal.points[i] }); // MACD Signal
                            seriesArray[5].points.push({ x: d, y: response.macdData.macd.points[i] }); // MACD
                            seriesArray[6].points.push({ x: d, y: response.macdData.macdHistogram.points[i] }); // MACD Histogram
                            MacdAxisCol.range.min = response.macdData.macdHistogram.min;
                            MacdAxisCol.range.max = response.macdData.macdHistogram.max;
                            MacdAxis.range.min = response.macdData.macd.min;
                            MacdAxis.range.max = response.macdData.macd.max;

                            seriesArray[7].points.push({ x: d, y: response.bbandsData.lower.points[i] }); // BBands Lower
                            seriesArray[8].points.push({ x: d, y: response.bbandsData.middle.points[i] }); // BBands Middle
                            seriesArray[9].points.push({ x: d, y: response.bbandsData.upper.points[i] }); // BBands Upper
                            BBlowerAxis.range.min = BBmiddleAxis.range.min = BBupperAxis.range.min = response.priceData.min;
                            BBlowerAxis.range.max = BBmiddleAxis.range.max = BBupperAxis.range.max = response.priceData.max;

                            seriesArray[10].points.push({ x: d, y: response.movingAvarage_1_Data.points[i] }); // MA 1 (50)
                            seriesArray[11].points.push({ x: d, y: response.movingAvarage_2_Data.points[i] }); // MA 2 (200)
                            MA1Axis.range.min = response.movingAvarage_1_Data.min;
                            MA1Axis.range.max = response.movingAvarage_1_Data.max;
                            MA2Axis.range.min = response.movingAvarage_2_Data.min;
                            MA2Axis.range.max = response.movingAvarage_2_Data.max;
                        }

                    }
                    PriceAxis.range = {};
                    PriceAxis.range.min = response.priceData.min;
                    PriceAxis.range.max = response.priceData.max;
                    PriceAxis.range.interval = response.priceData.interval

                    CapitalizationAxis.range = {};
                    CapitalizationAxis.range.min = response.capitalizationData.min;
                    CapitalizationAxis.range.max = response.capitalizationData.max;
                    CapitalizationAxis.range.interval = response.capitalizationData.interval
                    CapitalizationAxis.visible = (($.grep(response.capitalizationData.points, function (n, i) {
                        return n > 0;
                    })).length > 0);


                    VolumeAxis.range = {};
                    VolumeAxis.range.min = 0;
                    VolumeAxis.range.max = Math.max(response.volumeData.max, Math.abs(response.volumeData.min));

                    break;
            }

            annotations = [];
            var maxSignals = 80;

            for (a = 0; a < response.signalData.signals.length; a++) {
                if (response.signalData.signals.length > maxSignals)
                    break;
                //if (response.signalData.signals[a].comment.indexOf('MACD ') > 0) continue;//TODO SZEDDKI

                var templateDiv = document.createElement("div");
                templateDiv.id = 'annot' + a;
                var imgElement = document.createElement("img");
                imgElement.style = 'width:9px';
                imgElement.title = response.signalData.signals[a].type + ' @@ ' + response.signalData.signals[a].value + ' ' + response.signalData.signals[a].comment + " - " + response.signalData.signals[a].date.substring(0, 10);
                if (response.signalData.signals[a].type == 'BUY') {
                    imgElement.src = "/images/greentriang.png";
                }
                else {
                    imgElement.src = "/images/redtriang.png";
                }
                templateDiv.appendChild(imgElement);
                annotationsdiv.appendChild(templateDiv);

                // Place Signal on Price Axis
                annotations.push({ visible: true, content: templateDiv.id, coordinateUnit: "points", x: response.signalData.signals[a].pos, y: response.signalData.signals[a].value });
                // Place Signal on MACD Axis
                if (response.signalData.signals[a].comment.indexOf('MACD') > 0)
                    annotations.push({ yAxisName: 'macdAxis', visible: true, content: templateDiv.id, coordinateUnit: "points", x: response.signalData.signals[a].pos, y: response.signalData.signals[a].signalValue });

                // Place Signal on RSI Axis
                if (response.signalData.signals[a].comment.indexOf('RSI') > 0)
                    annotations.push({ yAxisName: 'rsiAxis', visible: true, content: templateDiv.id, coordinateUnit: "points", x: response.signalData.signals[a].pos, y: response.signalData.signals[a].signalValue });
            }

            // Dividends
            for (a = 0; a < response.dividendData.dividends.length; a++) {
                var templateDiv = document.createElement("div");
                templateDiv.id = 'annotd' + a;
                var imgElement = document.createElement("img");
                imgElement.style = 'width:16px';
                imgElement.title = response.dividendData.dividends[a].dividendValue;
                imgElement.src = "/images/dollar.jpg";


                var txtElement = document.createElement("div");
                txtElement.innerHTML = '<b>' + response.dividendData.dividends[a].dividendValue + '</b>';

                templateDiv.appendChild(txtElement);
                templateDiv.appendChild(imgElement);
                annotationsdiv.appendChild(templateDiv);

                annotations.push({ visible: true, content: templateDiv.id, coordinateUnit: "points", x: response.dividendData.dividends[a].pos, y: response.dividendData.dividends[a].value });

            }

            //console.log('annotationsdiv',annotationsdiv);

			//console.log('annotations',annotations);

            //document.getElementById('chartframe').style="display:block;"
            var id = 'chart' + ++cntr;
            var newDiv = document.createElement("div");
            newDiv.id = id;
            newDiv.name = id;
            //newDiv.style = "width:100%;"; //  border: 1px solid green;
            container.appendChild(newDiv);

            var subtitle = '';
            if (days == 1) {
                if (selected.data.id.includes('Hungarian Equities/')) {
                    subtitle = response.dateTimeData.min.substring(0, 10) + ':     ' + response.dateTimeData.min.substring(11, 19) + '  -  ' + response.dateTimeData.max.substring(11, 19);
                }
                else {
                    subtitle = response.dateTimeData.min.replace('T', '  ').substring(0, 17) + '  -  ' + response.dateTimeData.max.replace('T', '  ').substring(0, 17) + '  (' + response.percentData.points[response.percentData.points.length - 1].toFixed(2) + '%)';
                }
            }
            else {
                subtitle = response.dateTimeData.min.substring(0, 10) + '  -  ' + response.dateTimeData.max.substring(0, 10) + '  (' + response.percentData.points[response.percentData.points.length - 1] + '%)';
            }

            if (response.overview == null || response.overview == "" || response.overview == "{}") {
                document.getElementById("tab_stat").style.display = "none";
            }
            else {
                document.getElementById("tab_stat").style.display = "block";
            }

            if (response.priceData.points.length == 0) {
                document.getElementById("tab_chart").style.display = "none";
            }
            else {
                document.getElementById("tab_chart").style.display = "block";
            }


            SetScreenSizeVars();
            var chartHeight = height - 137;
            var chartWidth = width;//parseInt(width * 1.15);
            if (landscape && mobile) {
                chartHeight = parseInt(height * 1.4);
            }
            console.log('chartHeight=',chartHeight, 'chartWidth=',chartWidth);
            legendVisible = false;
            MultipleAxesChart('#chart' + cntr, response.name + '  (' + response.priceData.points[response.priceData.points.length - 1] + ')  ' + (response.percentData.points[response.percentData.points.length - 1] - 100).toFixed(2) + '%', subtitle, macdrsi, chartHeight, '100%');
            EnableButtons(true);
            $(window).scrollTop(0);
            document.title = originalTitle;
            SetURL(data, 'index');
        });
        return true;
    }
</script>